- hosts: localhost
  connection: local
  become: true
  vars:
   hoststring: "ansible_ssh_user=ec2-user ansible_ssh_private_key_file=../aws-private.pem"
   hostpath: "/etc/ansible/hosts"
   security_group: default
   instance_type: t2.micro
   image: ami-035be7bafff33b6b6
   region: us-east-1
   subnet: subnet-a06713c5
  tasks:
    - name: Find the path to the python interpreter
      command: which python
      register: pythonpath
      when: lookup('env', 'CI') == "true"

    - name: Set python interpreter path when in CI
      set_fact: ansible_python_interpreter={{ pythonpath.stdout }}
      when: lookup('env', 'CI') == "true"

    - name: Create an EC2 key
      ec2_key:
        aws_access_key: AKIAJE34VG5XR2FINN6Q
        aws_secret_key: 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
        name: "HCM_Ansible_Geneva"
        region: "{{ region }}"
      register: ec2_key

    - name: Save private key
      copy: content="{{ ec2_key.key.private_key }}" dest="../aws-private.pem" mode=0400
      when: ec2_key.changed

    - name: Launch instance
      ec2:
         aws_access_key: AKIAJE34VG5XR2FINN6Q
         aws_secret_key: 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
         key_name: "HCM_Ansible_Geneva"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet }}"
         assign_public_ip: yes
         instance_tags:
                  env: "geneva"
      register: ec2

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=ec2
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"
